{
    "Answers": [
        {
            "Command": "rm",
            "Explanations about Options": {
                "-f(M)": "ignore nonexistent files and arguments, never prompt",
                "-i(C)": "Step by step instructions: .  1) Open a terminal window and enter the following commands: .  \"mkdir recently_used_fix\" .  \"cd recently_used_fix/\" .  \"sudo apt-get build-dep gtk+2.0\" .  \"apt-get source gtk+2.0\" .  \"wget -O deselect_recently_used.patch http://pastebin.com/download.php?i=VE4STB6M\" .  \"patch -p0 < deselect_recently_used.patch\" .  \"cd gtk+2.0-2.24.10/\" .  \"echo jlj | dpkg-source --commit\" .  \"sudo dpkg-buildpackage\" .  \"cd ..\" .  2) Close any package managers (such as Synaptic) and enter the following command in the terminal window: .  \"sudo dpkg -i *.deb\" .  3) If the \"dpkg -i\" command gives errors about overwriting a handful of existing files (changelogs and such), use \"sudo rm FILENAME\" to delete each file it complained about, then repeat step 2.",
                "-i(M)": "prompt before every removal",
                "-r(M)": "remove directories and their contents recursively"
            },
            "MP Summary": "remove files or directories",
            "Most Similar TLDR Script": "rm -i {{file(s)}}",
            "Most Similar TLDR Task": "Interactively remove multiple files, with a prompt before every removal",
            "Top-3 Scripts": [
                "au_735798: rm -rf <one level above the Eclipse installation dir>",
                "au_103890: sudo rm <i>FILENAME</i>\n\nsudo rm -rf recently_used_fix/",
                "au_292317: rm -rf /path/to/build/directory"
            ],
            "Top-3 Similar Questions": [
                "au_735798: Removal of Eclipse completely",
                "au_103890: Is there a way to completely remove \"recently used\" from open and save dialogs?",
                "au_292317: How do I completely remove Unity Next?"
            ]
        },
        {
            "Command": "dpkg",
            "Explanations about Options": {
                "--get-selections(M)": "Get list of package selections, and write it to stdout. Without a pattern, non-\n installed packages (i.e. those which have been previously purged) will not be\n shown.",
                "--purge(M)": "Purge an installed or already removed package. This removes everything, including\n conffiles, and anything else cleaned up from postrm. If -a or --pending is given\n instead of a package name, then all packages unpacked or removed, but marked to be\n purged in file /var/lib/dpkg/status, are purged.",
                "-i(C)": "Step by step instructions: .  1) Open a terminal window and enter the following commands: .  \"mkdir recently_used_fix\" .  \"cd recently_used_fix/\" .  \"sudo apt-get build-dep gtk+2.0\" .  \"apt-get source gtk+2.0\" .  \"wget -O deselect_recently_used.patch http://pastebin.com/download.php?i=VE4STB6M\" .  \"patch -p0 < deselect_recently_used.patch\" .  \"cd gtk+2.0-2.24.10/\" .  \"echo jlj | dpkg-source --commit\" .  \"sudo dpkg-buildpackage\" .  \"cd ..\" .  2) Close any package managers (such as Synaptic) and enter the following command in the terminal window: .  \"sudo dpkg -i *.deb\" .  3) If the \"dpkg -i\" command gives errors about overwriting a handful of existing files (changelogs and such), use \"sudo rm FILENAME\" to delete each file it complained about, then repeat step 2.",
                "-i(M)": "Install the package. If --recursive or -R option is specified, package-file must\n refer to a directory instead."
            },
            "MP Summary": "package manager for Debian",
            "Most Similar TLDR Script": "dpkg -r {{package_name}}",
            "Most Similar TLDR Task": "Remove a package",
            "Top-3 Scripts": [
                "au_47898: sudo dpkg --purge [package name]",
                "au_103890: sudo dpkg -i *.deb\n\ndpkg -i",
                "au_653295: dpkg --get-selections | awk '/oracle-java/ && /installer/ {print \"sudo apt-get purge \"$1}' \ndpkg --get-selections | awk '/openjdk/ {print \"sudo apt-get -y purge \"$1}'\n\ndpkg --get-selections | awk '/oracle-java/ && /installer/ {system(\"sudo apt-get purge \"$1)}'\ndpkg --get-selections | awk '/openjdk/ {system(\"sudo apt-get -y purge \"$1)}'"
            ],
            "Top-3 Similar Questions": [
                "au_47898: Why can't I completely remove any applications?",
                "au_103890: Is there a way to completely remove \"recently used\" from open and save dialogs?",
                "au_653295: How to remove all version of java completely from Linux system ?"
            ]
        },
        {
            "Command": "apt-get",
            "Explanations about Options": {},
            "MP Summary": "APT package handling utility - command-line interface",
            "Most Similar TLDR Script": "apt-get autoremove",
            "Most Similar TLDR Task": "Remove all packages that are no longer needed",
            "Top-3 Scripts": [
                "au_244754: sudo apt-get purge <package-name>",
                "au_20127: apt-get purge",
                "au_103890: sudo apt-get build-dep gtk+2.0\n\napt-get source gtk+2.0"
            ],
            "Top-3 Similar Questions": [
                "au_244754: How to completely remove application",
                "au_20127: How to remove configuration files completely",
                "au_103890: Is there a way to completely remove \"recently used\" from open and save dialogs?"
            ]
        },
        {
            "Command": "find",
            "Explanations about Options": {
                "-d(M)": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
                "-empty(M)": "File is empty and is either a regular file or a directory.",
                "-iname(M)": "Like -name, but the match is case insensitive. For example, the patterns `fo*' and\n `F??' match the file names `Foo', `FOO', `foo', `fOo', etc. The pattern `*foo*`\n will also match a file called '.foobar'.",
                "-mindepth(M)": "Do not apply any tests or actions at levels less than levels (a non-negative\n integer). -mindepth 1 means process all files except the starting-points.",
                "-mtime(M)": "File's data was last modified n*24 hours ago. See the comments for -atime to\n understand how rounding affects the interpretation of file modification times.",
                "-n(M)": "for less than n ,",
                "-name(M)": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
                "-not(M)": "Same as ! expr, but not POSIX compliant.",
                "-type(M)": "File is of type c:"
            },
            "MP Summary": "search for files in a directory hierarchy",
            "Most Similar TLDR Script": "find {{root_path}} -name '{{*.py}}' -not -path '{{*/site-packages/*}}'",
            "Most Similar TLDR Task": "Find files matching a given pattern, excluding specific paths",
            "Top-3 Scripts": [
                "so_28763093: find directory -mindepth 1 -delete",
                "so_52775662: #!/bin/bash\nastdir=/var/spool/asterisk/monitor/\nfind \"$astdir\" -type f -iname '*.wav' -mtime +60 -delete\nfind \"$astdir\" -type f -iname '*.mp3' -mtime +60 -delete\nfind \"$astdir\" -type d -empty -delete\n\nfind \"$astdir\" \\( -type f \\( -iname '*.mp3' -or -iname '*.wav' \\) -mtime +60 \\) -or \\( -type d -empty \\)"
            ],
            "Top-3 Similar Questions": [
                "so_28763093: On Linux, what is the correct way to completely empty a directory without deleting it?",
                "so_52775662: Find script not completing correctly"
            ]
        },
        {
            "Command": "print",
            "Explanations about Options": {},
            "MP Summary": "execute programs via entries in the mailcap file",
            "Most Similar TLDR Script": "print {{filename}}",
            "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
            "Top-3 Scripts": [
                "au_653295: dpkg --get-selections | awk '/oracle-java/ && /installer/ {print \"sudo apt-get purge \"$1}' \ndpkg --get-selections | awk '/openjdk/ {print \"sudo apt-get -y purge \"$1}'",
                "so_32722439: awk -F, '$1 != last { last=$1; print }'"
            ],
            "Top-3 Similar Questions": [
                "au_653295: How to remove all version of java completely from Linux system ?",
                "so_32722439: Is there a way to remove only the followed duplicates?"
            ]
        }
    ],
    "Query": "What is the correct way to completely remove an application?"
}