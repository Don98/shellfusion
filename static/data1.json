{
  "Query": "Move all files with a certain extension from multiple subdirectories into one directory",
  "Answers": [
    {
      "Command": "cd",
      "MP Summary": "change the working directory",
      "Most Similar TLDR Task": "Go to the given directory",
      "Most Similar TLDR Script": "cd {{path/to/directory}}",
      "Top-3 Similar Questions": [
        "so_30307214: Move files from multiple folders to multiple folders in Linux",
        "ul_484961: Move contents of all sub subdirectories up into just their subdirectories",
        "au_857966: how can I move files with specific names from one folder to another"
      ],
      "Top-3 Scripts": [
        "so_30307214: cd test\nfor dir in folder*; do\n    mv \"$dir/*\" \"/temp/$dir\"\ndone",
        "ul_484961: for dir in */*; do\n  if [[ -d \"$dir\" ]]; then\n    ( \n      cd \"$dir\"\n      mv -n * ..\n      cd ..\n      rmdir \"$( basename \"$dir\" )\"\n    )\n  fi\ndone",
        "au_857966: cd /Users/Marine/Descktop/folderGN\nfor f in *[Pp]rotein* *MSMS* *PSms* ; do echo mv -v -- \"$f\" ../myfolder ; done"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mv",
      "MP Summary": "move (rename) files",
      "Most Similar TLDR Task": "Move files in arbitrary locations",
      "Most Similar TLDR Script": "mv {{source}} {{target}}",
      "Top-3 Similar Questions": [
        "ul_74911: How to move all files with a certain file extension from subdirectories to a single directory",
        "so_35710987: moving files with specific extension to directory",
        "su_1556021: How do I move all file with specific extension to a specific directory?"
      ],
      "Top-3 Scripts": [
        "ul_74911: mkdir ~/epubs\nmv -- **/*.epub ~/epubs/\n\nfind . -name '*.epub' -exec mv {} ~/epubs \\;",
        "so_35710987: mv /home/cmccabe/Desktop/NGS/annovar/*_multianno.txt /home/cmccabe/Desktop/NGS/API/2-12-2015/annovar/",
        "su_1556021: for dir in */; do\n    echo mv \"$dir\"/*.exr \"$dir/2048x567\"\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files by extension",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*.ext}}'",
      "Top-3 Similar Questions": [
        "ul_74911: How to move all files with a certain file extension from subdirectories to a single directory",
        "so_42325576: Move all files in certain subdirectory",
        "so_59408504: move files with extension from a subdirectory of directory to another subdirectory with the same name of another directory"
      ],
      "Top-3 Scripts": [
        "ul_74911: find . -name '*.epub' -exec mv {} ~/epubs \\;",
        "so_42325576: find /root/* -mindepth 1 -maxdepth 1 -type f\n\nfind /root/12* ...\n\nIFS=$'\\n'\nfor i in $(find /root/* -mindepth 1 -maxdepth 1 -type f); do\n    mv \"$i\" \"${i%/*}/medium/\"\ndone",
        "so_59408504: find + gnu-cp\n\nfind /dir1 -name '*.json' -exec cp --parents -t /dir2/ {} +"
      ],
      "Explanations about Options": {
        "-mindepth(M)": "Do not apply any tests or actions at levels less than levels (a non-negative\n integer). -mindepth 1 means process all files except the starting-points.",
        "-n(M)": "for less than n ,",
        "-maxdepth(M)": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
        "-maxdepth(C)": "finds all files (\"-type f\") that are at depth 1 (\"-mindepth 1 -maxdepth 1\") inside the sub-directories of \"/root\".",
        "-name(M)": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
        "-type(M)": "File is of type c:"
      }
    },
    {
      "Command": "cp",
      "MP Summary": "copy files and directories",
      "Most Similar TLDR Task": "Copy a file into another directory, keeping the filename",
      "Most Similar TLDR Script": "cp {{path/to/source_file.ext}} {{path/to/target_parent_directory}}",
      "Top-3 Similar Questions": [
        "so_59408504: move files with extension from a subdirectory of directory to another subdirectory with the same name of another directory",
        "ul_521808: Compare two directories for a certain extension and then move the missing ones to a new directory",
        "so_31829988: How to copy files with a particular extension from one directory to another in linux"
      ],
      "Top-3 Scripts": [
        "so_59408504: find /dir1 -name '*.json' -exec cp --parents -t /dir2/ {} +\n\nman cp",
        "ul_521808: rm -rf dirC; mkdir dirC\ncp -p dirB/*.dm4 dirC/\ncp -p dirA/*.dm4 dirC/\ndiff <(ls dirA) <(ls dirB)\n\n$ cat << EOF > foo.sh; chmod 755 foo.sh\n#!/usr/bin/env bash\nrm -rf dirC; mkdir dirC\ncp -p dirB/*.dm4 dirC/\ncp -p dirA/*.dm4 dirC/\ndiff <(ls dirA) <(ls dirB)\nEOF",
        "so_31829988: #/bin/sh\nEXT=${1}\nDST=${2}\ncp *.$EXT \"$DST\""
      ],
      "Explanations about Options": {
        "-p(M)": "same as --preserve=mode , ownership , timestamps"
      }
    },
    {
      "Command": "diff",
      "MP Summary": "compare two files",
      "Most Similar TLDR Task": "Compare directories recursively (shows names for differing files/directories as well as changes made to files)",
      "Most Similar TLDR Script": "diff -r {{old_directory}} {{new_directory}}",
      "Top-3 Similar Questions": [
        "ul_521808: Compare two directories for a certain extension and then move the missing ones to a new directory"
      ],
      "Top-3 Scripts": [
        "ul_521808: rm -rf dirC; mkdir dirC\ncp -p dirB/*.dm4 dirC/\ncp -p dirA/*.dm4 dirC/\ndiff <(ls dirA) <(ls dirB)\n\n$ cat << EOF > foo.sh; chmod 755 foo.sh\n#!/usr/bin/env bash\nrm -rf dirC; mkdir dirC\ncp -p dirB/*.dm4 dirC/\ncp -p dirA/*.dm4 dirC/\ndiff <(ls dirA) <(ls dirB)\nEOF"
      ],
      "Explanations about Options": {}
    }
  ]
}
